# Set the base image dynamically based on the target architecture
# Use buildx or a similar tool to pass the TARGETARCH build argument
ARG TARGETARCH=amd64
FROM docker.io/alpine:3 AS base

RUN echo "Building for architecture ${TARGETARCH}"

# Labels
LABEL org.opencontainers.image.authors="tompisula@labrats.work"
LABEL org.opencontainers.image.source="https://github.com/labrats-work/ops-images"

# Environment variables and arguments
ARG TERRAFORM_VERSION=1.7.5
ENV TERRAFORM_VERSION=${TERRAFORM_VERSION}

# Install dependencies
RUN apk add --no-cache \
    python3 \
    py3-pip \
    ansible \
    curl \
    tar \
    git \
    findutils \
    openssh \
    jq \
    yq \
    wireguard-tools \
    wireguard-tools-wg-quick

# Conditional logic for downloading Terraform based on architecture
# Here, assuming that Terraform binaries for arm64 and amd64 are directly available via URL pattern.
# You may need to adjust the URLs based on actual availability and naming conventions.
RUN if [ "${TARGETARCH}" = "amd64" ]; then \
        TERRAFORM_ARCH="amd64"; \
    elif [ "${TARGETARCH}" = "arm64" ]; then \
        TERRAFORM_ARCH="arm64"; \
    fi \
    && curl -LO https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_${TERRAFORM_ARCH}.zip \
    && unzip terraform_${TERRAFORM_VERSION}_linux_${TERRAFORM_ARCH}.zip -d /usr/local/bin \
    && rm terraform_${TERRAFORM_VERSION}_linux_${TERRAFORM_ARCH}.zip

WORKDIR /app

ENTRYPOINT []
CMD []
