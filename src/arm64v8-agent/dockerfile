# Use an official ARM64 Debian slim image as a parent image
FROM arm64v8/debian:bookworm-slim

LABEL org.opencontainers.image.authors="tompisula@labrats.work"
LABEL org.opencontainers.image.source="https://github.com/labrats-work/ops-images"

# Install Python, pip, and venv
RUN apt-get update && \
    apt-get install -y python3 python3-pip python3-venv git && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Create a virtual environment
RUN python3 -m venv /opt/venv

# Install Ansible within the virtual environment
ENV PATH="/opt/venv/bin:$PATH"
RUN pip install --upgrade pip && \
    pip install ansible

# Create a non-root user and change ownership of necessary directories
RUN useradd -m appuser && \
    chown -R appuser:appuser /opt/venv && \
    mkdir -p /usr/src/app && \
    chown -R appuser:appuser /usr/src/app

# Set the working directory in the container
WORKDIR /usr/src/app

# Copy the scripts into the container at /usr/src/app
# Ensure they are owned by the non-root user
COPY --chown=appuser:appuser entrypoint.sh .
COPY --chown=appuser:appuser repo_sync.sh .

# Make the scripts executable
RUN chmod +x entrypoint.sh repo_sync.sh

# Switch to non-root user
USER appuser

# Use the entry script to initialize the container
ENTRYPOINT ["./entrypoint.sh"]
